package com.example.Quoter;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.Quoter.domain.Quote;
import com.example.Quoter.repos.QuoteRepo;

@Controller
public class GreetingController {
    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private QuoteRepo quoteRepo;
    
    @GetMapping("/greeting")
    public String greeting(
            @RequestParam(name="name", required=false, defaultValue="World")
            String name, Map<String, Object> model) {
        model.put("name", name);
        return "greeting";
    } 
    
    @GetMapping
    public String main(Map<String, Object> model) {
        Iterable<Quote> quotes = quoteRepo.findAll();
        model.put("quotes", quotes);
        
        return "main";
    }
    
    @PostMapping
    // the form will be sent to the same page where it was sent from.
    public String add(@RequestParam String text, @RequestParam String tag, Map<String, Object> model) {
        // save the quote to the repository(database).
        Quote quote = new Quote(text, tag);
        quoteRepo.save(quote);
        
        return "redirect:/";
    }
    
    @PostMapping("filter")
    public String filter(@RequestParam String filter, Map<String, Object> model) {
        if (filter != null && filter.isEmpty()) return "redirect:/";
        
        // get the quotes that has the particular tag.
        List<Quote> filtered_quotes = quoteRepo.findByTag(filter);
        model.put("quotes", filtered_quotes);
        
        return "main";
    }
}
